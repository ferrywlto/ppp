@page "/browser-session-storage-counter"
@using blazor_mix_ssr.Shared
@inject InjectAppState _appState
@inject IJSRuntime _js

<PageTitle>@Title</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@Title</MudText>
<MudText Class="mb-4">Current count: @Count</MudText>
<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">+1</MudButton>

@code {
    private const string Title = "Browser Session Storage Counter";

    /* Note that sessionStorage does not persist on tab close and not share with other tab.
     */
    private int Count { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        Console.WriteLine($"BrowserLocalStorage - OnAfterRenderAsync : firstRender ? {firstRender}");

        if (firstRender) {
            Count = await GetStorageValue();
            StateHasChanged();
        }
    }

    private async void IncrementCount() {
        Count += 1;
        await SetStorageValue(Count);
    }

    private async Task<int> GetStorageValue() {
        var result = await _js.InvokeAsync<string>("sessionStorage.getItem", "count");
        return string.IsNullOrEmpty(result) ? 0 : int.Parse(result);
    }

    private async Task SetStorageValue(int value) {
        await _js.InvokeVoidAsync("sessionStorage.setItem", "count", value.ToString());
    }
}
